{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onSubmit","event","preventDefault","update","className","type","placeholder","value","required","autoFocus","onChange","target","onClick","src","class","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","key","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","typet","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","paddingTop","paddingBottom","marginTop","signOut","push","Navigation","display","justifyContent","width","to","marginRight","flexDirection","alignItems","fontSize","marginLeft","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2d9e522.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIB_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"메시지를 삭제할까요?\");\r\n        if(ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{value}\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"메시지를 수정해주세요\" \r\n                            value={newNweet} \r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner &&  (\r\n                        <div class=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                      </div>\r\n                    )}\r\n                </>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {storageService, dbService} from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(nweet === \"\") {\r\n            return;\r\n        }\r\n        let attachmentUrl=\"\";\r\n        if(attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL(); \r\n        }\r\n        const nweetObj = {\r\n            text : nweet,\r\n            createdAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{value}\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target:{files}\r\n        } = event;\r\n        const theFile = files[0]\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget:{result}\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\")\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"메시지를 작성해주세요\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>사진 첨부하기</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                 <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n    \r\n}\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from '../components/Nweet'\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    \r\n    const [nweets, setNweets] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id, \r\n                ...doc.data()\r\n            }))\r\n            setNweets(nweetArray);\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Home;","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n\r\n    //Hooks\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name,value}\r\n        } = event;\r\n        if(name === \"email\") {\r\n            setEmail(value);\r\n        } else if(name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault(); //기본행위를 실행하지 않는다 => 내가 컨트롤 할수 있게(=form 제출될때 리로딩 하지 않음)\r\n\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email,password)\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n        \r\n    };\r\n    \r\n    const toggleAccount =() => setNewAccount(prev => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input \r\n                    name=\"email\"\r\n                    typet=\"text\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    value={newAccount ? \"Create Account\" : \"Log In\"} \r\n                    className=\"authInput authSubmit\"\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target:{name}\r\n        } = event;\r\n\r\n        let provider;\r\n        if(name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Auth;","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }    \r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\",\"asc\")\r\n            .get();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    },[]);\r\n    \r\n    const onSubmit =async(event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName\r\n            })\r\n            refreshUser();\r\n        }\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value}\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                    onChange={onChange}\r\n                    type=\"text\" \r\n                    autoFocus\r\n                    placeholder=\"이름을 변경해주세요\" \r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                    style={{\r\n                        paddingTop : 7,\r\n                        paddingBottom : 7\r\n                    }}\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    placeholder=\"Update Profile\" \r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                    value=\"Update\"\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n   \r\n    );\r\n};","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => <nav style={{ display:\"flex\", justifyContent: \"center\" }}>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50, width: \"fit-content\" }}>\r\n        <li>\r\n            <Link to=\"/\" \r\n                style={{\r\n                    marginRight: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}\r\n            >\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>Nweet</span>\r\n            </Link>\r\n        </li>\r\n\r\n        <li>\r\n            <Link\r\n                to=\"/profile\"\r\n                style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}\r\n            >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName ? `${userObj.displayName}의 Profile`: \"Profile\"}\r\n                </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\n\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ( {refreshUser, isLoggedIn, userObj} ) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 50,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                        <Redirect from=\"*\" to=\"/\" />\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                        <Redirect from=\"*\" to=\"/\" />\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null); \n  \n  useEffect(()=>{ //Hooks\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          displayName : user.displayName,\n          uid : user.uid,\n          updateProfile : (args) => user.updateProfile(args)\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  },[])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName : user.displayName,\n      uid : user.uid,\n      updateProfile : (args) => user.updateProfile(args)\n    });\n  }\n  return (\n    <>\n      {init ? (\n        <AppRouter \n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)} \n          userObj={userObj} \n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>  \n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}